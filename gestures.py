# Choregraphe bezier export in Python.

def giconic_hand_onwaist():
	names = list()
	times = list()
	keys = list()
	names.append("LElbowRoll")
	times.append([0.04, 0.8])
	keys.append([[-0.416743, [3, -0.0133333, 0], [3, 0.253333, 0]], [-1.56207, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.04, 0.8])
	keys.append([[-1.19431, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.251327, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.04, 0.8])
	keys.append([[0.3, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.3, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.04, 0.8])
	keys.append([[1.45947, [3, -0.0133333, 0], [3, 0.253333, 0]], [2.03331, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.04, 0.8])
	keys.append([[0.209986, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.731293, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.04])
	keys.append([[0.0973781, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.04, 0.8])
	keys.append([[0.418036, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.56207, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.04, 0.8])
	keys.append([[1.19527, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.0715585, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.04, 0.8])
	keys.append([[0.3, [3, -0.0133333, 0], [3, 0.253333, 0]], [0, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.04, 0.8])
	keys.append([[1.45132, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.48178, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.04, 0.8])
	keys.append([[-0.213935, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.66148, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.04, 0.8])
	keys.append([[0.1, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.301942, [3, -0.253333, 0], [3, 0, 0]]])

	return names, times, keys

def gbeat_hand_emphasis():
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.04])
	keys.append([[-0.16967, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.04])
	keys.append([[0, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("LAnklePitch")
	times.append([0.04])
	keys.append([[0.087354, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("LAnkleRoll")
	times.append([0.04])
	keys.append([[-0.129748, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.04, 0.92, 1.64, 2.2, 3, 3.8, 4.8])
	keys.append([[-0.409196, [3, -0.0133333, 0], [3, 0.293333, 0]], [-0.551524, [3, -0.293333, 0], [3, 0.24, 0]], [-0.298451, [3, -0.24, 0], [3, 0.186667, 0]], [-0.614356, [3, -0.186667, 0.0919891], [3, 0.266667, -0.131413]], [-0.968658, [3, -0.266667, 0.0843576], [3, 0.266667, -0.0843576]], [-1.1205, [3, -0.266667, 0], [3, 0.333333, 0]], [-0.488692, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.04, 0.92, 1.64, 2.2, 3.8])
	keys.append([[-1.1879, [3, -0.0133333, 0], [3, 0.293333, 0]], [-0.539307, [3, -0.293333, -0.217782], [3, 0.24, 0.178185]], [0.143117, [3, -0.24, 0], [3, 0.186667, 0]], [0.0715585, [3, -0.186667, 0], [3, 0.533333, 0]], [0.10821, [3, -0.533333, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.04, 0.92, 1.64, 2.2, 3, 3.8, 4.8])
	keys.append([[0.290728, [3, -0.0133333, 0], [3, 0.293333, 0]], [0.39, [3, -0.293333, 0], [3, 0.24, 0]], [0.92, [3, -0.24, 0], [3, 0.186667, 0]], [0.8, [3, -0.186667, 0.0452941], [3, 0.266667, -0.0647059]], [0.59, [3, -0.266667, 0.045], [3, 0.266667, -0.045]], [0.53, [3, -0.266667, 0.0355556], [3, 0.333333, -0.0444444]], [0.35, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("LHipPitch")
	times.append([0.04])
	keys.append([[0.129748, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("LHipRoll")
	times.append([0.04])
	keys.append([[0.0914918, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("LHipYawPitch")
	times.append([0.04])
	keys.append([[-0.16967, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("LKneePitch")
	times.append([0.04])
	keys.append([[-0.087354, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.04, 1.64, 2.2, 3, 3.8])
	keys.append([[1.46567, [3, -0.0133333, 0], [3, 0.533333, 0]], [1.24617, [3, -0.533333, 0.183913], [3, 0.186667, -0.0643695]], [0.720821, [3, -0.186667, 0], [3, 0.266667, 0]], [1.4556, [3, -0.266667, 0], [3, 0.266667, 0]], [1.16763, [3, -0.266667, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.04, 0.92, 1.64, 3, 3.8, 4.8])
	keys.append([[0.218955, [3, -0.0133333, 0], [3, 0.293333, 0]], [0.240855, [3, -0.293333, -0.0219], [3, 0.24, 0.0179181]], [0.44855, [3, -0.24, 0], [3, 0.453333, 0]], [0.240855, [3, -0.453333, 0], [3, 0.266667, 0]], [0.42237, [3, -0.266667, 0], [3, 0.333333, 0]], [0.42237, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.04, 0.92, 1.64, 2.2, 3.8])
	keys.append([[0.099818, [3, -0.0133333, 0], [3, 0.293333, 0]], [-0.174533, [3, -0.293333, 0.236524], [3, 0.24, -0.19352]], [-1.82387, [3, -0.24, 0], [3, 0.186667, 0]], [-1.82387, [3, -0.186667, 0], [3, 0.533333, 0]], [-1.22173, [3, -0.533333, 0], [3, 0, 0]]])

	names.append("RAnklePitch")
	times.append([0.04])
	keys.append([[0.087354, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("RAnkleRoll")
	times.append([0.04])
	keys.append([[0.129748, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.04, 0.8, 1.12, 3, 3.8, 4.8])
	keys.append([[0.416654, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.570723, [3, -0.253333, -0.111059], [3, 0.106667, 0.0467619]], [0.890118, [3, -0.106667, -0.0314794], [3, 0.626667, 0.184941]], [1.21999, [3, -0.626667, 0], [3, 0.266667, 0]], [0.804597, [3, -0.266667, 0.108857], [3, 0.333333, -0.136071]], [0.485202, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.04, 0.8, 1.12, 3, 3.8, 4.8])
	keys.append([[1.19318, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.755728, [3, -0.253333, 0], [3, 0.106667, 0]], [1.18682, [3, -0.106667, 0], [3, 0.626667, 0]], [1.04371, [3, -0.626667, 0.143117], [3, 0.266667, -0.0609009]], [0.359538, [3, -0.266667, 0], [3, 0.333333, 0]], [1.29503, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.04, 0.8, 1.12, 4.8])
	keys.append([[0.297714, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.49, [3, -0.253333, -0.164734], [3, 0.106667, 0.0693616]], [1, [3, -0.106667, 0], [3, 1.22667, 0]], [1, [3, -1.22667, 0], [3, 0, 0]]])

	names.append("RHipPitch")
	times.append([0.04])
	keys.append([[0.129748, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("RHipRoll")
	times.append([0.04])
	keys.append([[-0.0914918, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("RHipYawPitch")
	times.append([0.04])
	keys.append([[-0.16967, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("RKneePitch")
	times.append([0.04])
	keys.append([[-0.087354, [3, -0.0133333, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.04, 0.8, 1.12, 3, 3.8, 4.8])
	keys.append([[1.46117, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.24617, [3, -0.253333, 0], [3, 0.106667, 0]], [1.29852, [3, -0.106667, -0.015232], [3, 0.626667, 0.0894878]], [1.56032, [3, -0.626667, 0], [3, 0.266667, 0]], [0.773181, [3, -0.266667, 0.167034], [3, 0.333333, -0.208793]], [0.432842, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.04, 0.8, 3.8, 4.8])
	keys.append([[-0.212636, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.356047, [3, -0.253333, 0.0131903], [3, 1, -0.0520668]], [-0.408407, [3, -1, 0.0523599], [3, 0.333333, -0.0174533]], [-0.862193, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.04, 0.8, 1.12, 3, 3.8])
	keys.append([[0.0990376, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.0471239, [3, -0.253333, 0], [3, 0.106667, 0]], [1.06291, [3, -0.106667, 0], [3, 0.626667, 0]], [-0.205949, [3, -0.626667, 0], [3, 0.266667, 0]], [1.76104, [3, -0.266667, 0], [3, 0, 0]]])

	return names, times, keys

def giconic_hand_big():
	names = list()
	times = list()
	keys = list()

	names.append("LElbowRoll")
	times.append([1.12])
	keys.append([[-1.49924, [3, -0.373333, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([1.12])
	keys.append([[-0.359538, [3, -0.373333, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([1.12])
	keys.append([[0.39, [3, -0.373333, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([1.12])
	keys.append([[2.08567, [3, -0.373333, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([1.12])
	keys.append([[0.654498, [3, -0.373333, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([1.12])
	keys.append([[0.71384, [3, -0.373333, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([1.12])
	keys.append([[0.58294, [3, -0.373333, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([1.12])
	keys.append([[1.15017, [3, -0.373333, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([1.12])
	keys.append([[1, [3, -0.373333, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([1.12])
	keys.append([[0.459022, [3, -0.373333, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([1.12])
	keys.append([[-1.48877, [3, -0.373333, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([1.12])
	keys.append([[1.82387, [3, -0.373333, 0], [3, 0, 0]]])

	return names, times, keys

def giconic_hand_release():
	names = list()
	times = list()
	keys = list()

	names.append("LElbowRoll")
	times.append([0.4, 1])
	keys.append([[-0.00872665, [3, -0.133333, 0], [3, 0.2, 0]], [-0.00872665, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.4, 1])
	keys.append([[-2.08567, [3, -0.133333, 0], [3, 0.2, 0]], [-2.08567, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.4, 1])
	keys.append([[1, [3, -0.133333, 0], [3, 0.2, 0]], [1, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.4, 1])
	keys.append([[1.5865, [3, -0.133333, 0], [3, 0.2, 0]], [1.5865, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.4, 1])
	keys.append([[0.589921, [3, -0.133333, 0], [3, 0.2, 0]], [0.589921, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.4, 1])
	keys.append([[-1.82387, [3, -0.133333, 0], [3, 0.2, 0]], [-1.82387, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.4, 1])
	keys.append([[0.00872665, [3, -0.133333, 0], [3, 0.2, 0]], [0.00872665, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.4, 1])
	keys.append([[2.08567, [3, -0.133333, 0], [3, 0.2, 0]], [2.08567, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.4, 1])
	keys.append([[1, [3, -0.133333, 0], [3, 0.2, 0]], [1, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.4, 1])
	keys.append([[1.56032, [3, -0.133333, 0], [3, 0.2, 0]], [1.56032, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.4, 1])
	keys.append([[-0.701622, [3, -0.133333, 0], [3, 0.2, 0]], [-0.701622, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.4, 1])
	keys.append([[1.5708, [3, -0.133333, 0], [3, 0.2, 0]], [1.5708, [3, -0.2, 0], [3, 0, 0]]])
	return names, times, keys

def gbeat_head_down():
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([1.04, 1.6])
	keys.append([[0.514872, [3, -0.346667, 0], [3, 0.186667, 0]], [0.514872, [3, -0.186667, 0], [3, 0, 0]]])

	return names, times, keys

def gbeat_head_up():
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.8, 1.36])
	keys.append([[-0.671952, [3, -0.266667, 0], [3, 0.186667, 0]], [-0.671952, [3, -0.186667, 0], [3, 0, 0]]])
	return names, times, keys


def gdeictic_hand_pointtobody():
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.28])
	keys.append([[-0.0698132, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.28])
	keys.append([[-0.00809667, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LAnklePitch")
	times.append([0.28])
	keys.append([[0.0820134, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LAnkleRoll")
	times.append([0.28])
	keys.append([[-0.127568, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.28])
	keys.append([[-1.49051, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.28])
	keys.append([[-0.37001, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.28])
	keys.append([[0.291787, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LHipPitch")
	times.append([0.28])
	keys.append([[0.12025, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LHipRoll")
	times.append([0.28])
	keys.append([[0.0997126, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LHipYawPitch")
	times.append([0.28])
	keys.append([[-0.177704, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LKneePitch")
	times.append([0.28])
	keys.append([[-0.0864859, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.28])
	keys.append([[0.825541, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.28])
	keys.append([[-0.314159, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.28])
	keys.append([[-0.801106, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RAnklePitch")
	times.append([0.28])
	keys.append([[0.0820134, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RAnkleRoll")
	times.append([0.28])
	keys.append([[0.127568, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.28])
	keys.append([[0.412882, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.28])
	keys.append([[1.18491, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.28])
	keys.append([[0.291787, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RHipPitch")
	times.append([0.28])
	keys.append([[0.12025, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RHipRoll")
	times.append([0.28])
	keys.append([[-0.0997126, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RHipYawPitch")
	times.append([0.28])
	keys.append([[-0.177704, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RKneePitch")
	times.append([0.28])
	keys.append([[-0.0864859, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.28])
	keys.append([[1.46568, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.28])
	keys.append([[-0.185415, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.28])
	keys.append([[0.0984369, [3, -0.0933333, 0], [3, 0, 0]]])

	return names, times, keys

def gbeat_head_emphasis():
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.48])
	keys.append([[-0.333358, [3, -0.16, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.48])
	keys.append([[0, [3, -0.16, 0], [3, 0, 0]]])

	return names, times, keys

def giconic_hand_scratchchin():
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-0.314159, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-0.224434, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.300127, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.21293, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.300127, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.21293, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.300127, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.21293, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LAnklePitch")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0.0894888, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0.0820134, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0820134, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0854716, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0820134, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0854716, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0820134, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0854716, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LAnkleRoll")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-0.127118, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-0.124333, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.124333, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.121496, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.124333, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.121496, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.124333, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.121496, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-1.54462, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-1.53075, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-1.53075, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-1.53428, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-1.53075, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-1.53428, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-1.53075, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-1.53428, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-0.877901, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-0.898283, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.898283, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.901157, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.898283, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.901157, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.898283, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.901157, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0.06, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0.5, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.16, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.42, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.16, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.42, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.16, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.42, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LHipPitch")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0.129666, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0.12478, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.12478, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.129251, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.12478, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.129251, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.12478, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.129251, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LHipRoll")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0.0961319, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0.0966165, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0966165, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0904642, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0966165, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0904642, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0966165, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0904642, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LHipYawPitch")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-0.179514, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-0.172993, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.172993, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.179046, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.172993, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.179046, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.172993, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.179046, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LKneePitch")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-0.09, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-0.0891144, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0891144, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0880156, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0891144, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0880156, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0891144, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0880156, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0.555015, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0.536169, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.536169, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.528386, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.536169, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.528386, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.536169, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.528386, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-0.314159, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-0.255944, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.255944, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.237274, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.255944, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.237274, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.255944, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.237274, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-0.836013, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-0.835229, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.835229, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.83447, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.835229, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.83447, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.835229, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.83447, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RAnklePitch")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0.0894888, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0.0820134, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0820134, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0854716, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0820134, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0854716, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0820134, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0854716, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RAnkleRoll")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0.127118, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0.124333, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.124333, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.121496, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.124333, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.121496, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.124333, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.121496, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0.419492, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0.419492, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.419492, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.424892, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.419492, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.424892, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.419492, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.424892, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[1.18604, [3, -0.0933333, 0], [3, 0.0533333, 0]], [1.18805, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.18805, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.19371, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.18805, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.19371, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.18805, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.19371, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0.290831, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0.291787, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.291787, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.290831, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.291787, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.290831, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.291787, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.290831, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RHipPitch")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0.129666, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0.12478, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.12478, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.129251, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.12478, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.129251, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.12478, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.129251, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RHipRoll")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-0.0961319, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-0.0966165, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0966165, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0904642, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0966165, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0904642, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0966165, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0904642, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RHipYawPitch")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-0.179514, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-0.172993, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.172993, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.179046, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.172993, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.179046, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.172993, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.179046, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RKneePitch")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-0.09, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-0.0891144, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0891144, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0880156, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0891144, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0880156, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0891144, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.0880156, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[1.46465, [3, -0.0933333, 0], [3, 0.0533333, 0]], [1.42802, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.42802, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.41678, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.42802, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.41678, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.42802, [3, -0.0533333, 0], [3, 0.0533333, 0]], [1.41678, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[-0.185001, [3, -0.0933333, 0], [3, 0.0533333, 0]], [-0.230853, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.230853, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.249781, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.230853, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.249781, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.230853, [3, -0.0533333, 0], [3, 0.0533333, 0]], [-0.249781, [3, -0.0533333, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.28, 0.44, 0.6, 0.76, 0.92, 1.08, 1.24, 1.4])
	keys.append([[0.0935271, [3, -0.0933333, 0], [3, 0.0533333, 0]], [0.091968, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.091968, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0942453, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.091968, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0942453, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.091968, [3, -0.0533333, 0], [3, 0.0533333, 0]], [0.0942453, [3, -0.0533333, 0], [3, 0, 0]]])

	return names, times, keys

def gdeictic_hand_pointforward():
	names = list()
	times = list()
	keys = list()

	names.append("LElbowRoll")
	times.append([0.6])
	keys.append([[-0.661784, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.6])
	keys.append([[-1.19109, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.6])
	keys.append([[0.88, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.6])
	keys.append([[0.195477, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.6])
	keys.append([[0.0628319, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.6])
	keys.append([[-0.18675, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.6])
	keys.append([[0.558064, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.6])
	keys.append([[1.3516, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.6])
	keys.append([[0.295559, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.6])
	keys.append([[1.46518, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.6])
	keys.append([[-0.17762, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.6])
	keys.append([[0.1752, [3, -0.2, 0], [3, 0, 0]]])

	return names, times, keys

def giconic_hand_shrug():
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([1.2])
	keys.append([[-0.314159, [3, -0.4, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([1.2])
	keys.append([[0.319395, [3, -0.4, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([1.2])
	keys.append([[-1.54462, [3, -0.4, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([1.2])
	keys.append([[-1.89019, [3, -0.4, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([1.2])
	keys.append([[0.76, [3, -0.4, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([1.2])
	keys.append([[0.284489, [3, -0.4, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([1.2])
	keys.append([[0.0191986, [3, -0.4, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([1.2])
	keys.append([[-0.528835, [3, -0.4, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([1.2])
	keys.append([[1.42768, [3, -0.4, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([1.2])
	keys.append([[1.8134, [3, -0.4, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([1.2])
	keys.append([[0.67, [3, -0.4, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([1.2])
	keys.append([[0.165806, [3, -0.4, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([1.2])
	keys.append([[0.270526, [3, -0.4, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([1.2])
	keys.append([[0.153589, [3, -0.4, 0], [3, 0, 0]]])

	return names, times, keys
